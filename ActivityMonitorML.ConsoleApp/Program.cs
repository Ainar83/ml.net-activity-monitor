// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using ActivityMonitorML.Model;

namespace ActivityMonitorML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\Users\ainc\Desktop\testData201126.txt";

        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual R with predicted R from sample data...\n\n");
            Console.WriteLine($"1: {sampleData.Col1}");
            Console.WriteLine($"2: {sampleData.Col2}");
            Console.WriteLine($"3: {sampleData.Col3}");
            Console.WriteLine($"4: {sampleData.Col4}");
            Console.WriteLine($"5: {sampleData.Col5}");
            Console.WriteLine($"6: {sampleData.Col6}");
            Console.WriteLine($"7: {sampleData.Col7}");
            Console.WriteLine($"8: {sampleData.Col8}");
            Console.WriteLine($"9: {sampleData.Col9}");
            Console.WriteLine($"10: {sampleData.Col10}");
            Console.WriteLine($"11: {sampleData.Col11}");
            Console.WriteLine($"12: {sampleData.Col12}");
            Console.WriteLine($"13: {sampleData.Col13}");
            Console.WriteLine($"14: {sampleData.Col14}");
            Console.WriteLine($"15: {sampleData.Col15}");
            Console.WriteLine($"16: {sampleData.Col16}");
            Console.WriteLine($"17: {sampleData.Col17}");
            Console.WriteLine($"18: {sampleData.Col18}");
            Console.WriteLine($"19: {sampleData.Col19}");
            Console.WriteLine($"20: {sampleData.Col20}");
            Console.WriteLine($"21: {sampleData.Col21}");
            Console.WriteLine($"22: {sampleData.Col22}");
            Console.WriteLine($"23: {sampleData.Col23}");
            Console.WriteLine($"24: {sampleData.Col24}");
            Console.WriteLine($"25: {sampleData.Col25}");
            Console.WriteLine($"26: {sampleData.Col26}");
            Console.WriteLine($"27: {sampleData.Col27}");
            Console.WriteLine($"28: {sampleData.Col28}");
            Console.WriteLine($"29: {sampleData.Col29}");
            Console.WriteLine($"30: {sampleData.Col30}");
            Console.WriteLine($"31: {sampleData.Col31}");
            Console.WriteLine($"32: {sampleData.Col32}");
            Console.WriteLine($"33: {sampleData.Col33}");
            Console.WriteLine($"34: {sampleData.Col34}");
            Console.WriteLine($"35: {sampleData.Col35}");
            Console.WriteLine($"36: {sampleData.Col36}");
            Console.WriteLine($"37: {sampleData.Col37}");
            Console.WriteLine($"38: {sampleData.Col38}");
            Console.WriteLine($"39: {sampleData.Col39}");
            Console.WriteLine($"40: {sampleData.Col40}");
            Console.WriteLine($"41: {sampleData.Col41}");
            Console.WriteLine($"42: {sampleData.Col42}");
            Console.WriteLine($"43: {sampleData.Col43}");
            Console.WriteLine($"44: {sampleData.Col44}");
            Console.WriteLine($"45: {sampleData.Col45}");
            Console.WriteLine($"46: {sampleData.Col46}");
            Console.WriteLine($"47: {sampleData.Col47}");
            Console.WriteLine($"48: {sampleData.Col48}");
            Console.WriteLine($"49: {sampleData.Col49}");
            Console.WriteLine($"50: {sampleData.Col50}");
            Console.WriteLine($"51: {sampleData.Col51}");
            Console.WriteLine($"52: {sampleData.Col52}");
            Console.WriteLine($"53: {sampleData.Col53}");
            Console.WriteLine($"54: {sampleData.Col54}");
            Console.WriteLine($"55: {sampleData.Col55}");
            Console.WriteLine($"56: {sampleData.Col56}");
            Console.WriteLine($"57: {sampleData.Col57}");
            Console.WriteLine($"58: {sampleData.Col58}");
            Console.WriteLine($"59: {sampleData.Col59}");
            Console.WriteLine($"60: {sampleData.Col60}");
            Console.WriteLine($"61: {sampleData.Col61}");
            Console.WriteLine($"62: {sampleData.Col62}");
            Console.WriteLine($"63: {sampleData.Col63}");
            Console.WriteLine($"64: {sampleData.Col64}");
            Console.WriteLine($"\n\nActual R: {sampleData.R} \nPredicted R value {predictionResult.Prediction} \nPredicted R scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: '\t',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .First();
            return sampleForPrediction;
        }
        #endregion
    }
}
